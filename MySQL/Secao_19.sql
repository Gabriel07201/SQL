/* ESTRUTURA DE UMA TRIGGER */

CREATE DATABASE AULA40;

USE AULA40;

CREATE TABLE USUARIO(
	IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30),
	SENHA VARCHAR(100)
);


CREATE TABLE BKP_USUARIO(
	IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
	IDUSUARIO INT,
	NOME VARCHAR(30),
	LOGIN VARCHAR(30)
);


/* CRIANDO A TRIGGER DE BACKUP */

DELIMITER $

CREATE TRIGGER BACKUP_USER
BEFORE DELETE ON USUARIO
FOR EACH ROW
BEGIN
	INSERT INTO BKP_USUARIO VALUES(NULL,OLD.IDUSUARIO, OLD.NOME,OLD.LOGIN);
END
$

INSERT INTO USUARIO VALUES(NULL,'ANDRADE','ANDRADE2009','HEXACAMPEAO');
SELECT * FROM USUARIO;

DELETE FROM USUARIO WHERE IDUSUARIO = 1;

SELECT * FROM BKP_USUARIO;


/* COMUNICAÇÃO ENTRE DATABASES */

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTOS(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);


CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTOS(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

USE LOJA;

INSERT INTO BACKUP.BKP_PRODUTOS VALUES(NULL,1000,'TESTE',0.0);
SELECT * FROM BACKUP.BKP_PRODUTOS;

/* CRIANDO UM TRIGGER ENTRE TABELAS */

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
BEFORE INSERT ON PRODUTOS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTOS VALUES(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR);
END
$

INSERT INTO PRODUTOS VALUES(NULL, 'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTOS VALUES(NULL, 'REVISTA MODELAGEM',79.00);
INSERT INTO PRODUTOS VALUES(NULL, 'LIVRO BI',06.00);
INSERT INTO PRODUTOS VALUES(NULL, 'LIVRO AZUL',100.00);

SELECT * FROM PRODUTOS;

SELECT * FROM BACKUP.BKP_PRODUTOS;


DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTOS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTOS VALUES(NULL,OLD.IDPRODUTO,OLD.NOME,OLD.VALOR);
END
$

DELIMITER ;

DELETE FROM PRODUTOS WHERE IDPRODUTO = 2;


DROP TRIGGER BACKUP_PRODUTO;

DELIMITER $

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTOS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTOS VALUES(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR);
END
$

DELIMITER ;

ALTER TABLE BACKUP.BKP_PRODUTOS
ADD EVENTO CHAR(1);

DELIMITER $
DROP TRIGGER BACKUP_PRODUTO_DEL$
CREATE TRIGGER BACKUP_PRODUTO_DEL
BEFORE DELETE ON PRODUTOS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTOS VALUES(NULL, OLD.IDPRODUTO,OLD.NOME,OLD.VALOR,'D');
END
$
DELIMITER ;

DELETE FROM PRODUTOS WHERE IDPRODUTO = '4';

SELECT * FROM BACKUP.BKP_PRODUTOS;


DELIMITER $
DROP TRIGGER BACKUP_PRODUTO$

CREATE TRIGGER BACKUP_PRODUTO
AFTER INSERT ON PRODUTOS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTOS VALUES(NULL,NEW.IDPRODUTO,NEW.NOME,NEW.VALOR, 'I');
END
$

DELIMITER ;

INSERT INTO PRODUTOS VALUES(NULL, 'INSERT', 100.20);

SELECT * FROM PRODUTOS;
SELECT * FROM BACKUP.BKP_PRODUTOS;


/* TRIGGER DE AUDITORIA */

DROP DATABASE LOJA;
DROP DATABASE BACKUP;

CREATE DATABASE LOJA;

USE LOJA;

CREATE TABLE PRODUTOS(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	VALOR FLOAT(10,2)
);

INSERT INTO PRODUTOS VALUES(NULL, 'LIVRO MODELAGEM',50.00);
INSERT INTO PRODUTOS VALUES(NULL, 'REVISTA MODELAGEM',79.00);
INSERT INTO PRODUTOS VALUES(NULL, 'LIVRO BI',06.00);
INSERT INTO PRODUTOS VALUES(NULL, 'LIVRO AZUL',100.00);


CREATE DATABASE BACKUP;

USE BACKUP;

CREATE TABLE BKP_PRODUTOS(
	IDBKP INT PRIMARY KEY AUTO_INCREMENT,
	IDPRODUTO INT,
	NOME VARCHAR(30),
	VALOR_ORIGINAL FLOAT(10,2),
	VALOR_ALTERADO FLOAT(10,2),
	DATA DATETIME,
	USUARIO VARCHAR(30),
	EVENTO CHAR(1)

);

USE LOJA;

DELIMITER $
CREATE TRIGGER AUDIT_PROD
AFTER UPDATE ON PRODUTOS
FOR EACH ROW
BEGIN
	INSERT INTO BACKUP.BKP_PRODUTOS VALUES(NULL, OLD.IDPRODUTO,OLD.NOME, OLD.VALOR,NEW.VALOR,NOW(),CURRENT_USER(),'D');
END
$
DELIMITER ;

UPDATE PRODUTOS SET VALOR = 110
WHERE IDPRODUTO = 4;

SELECT * FROM PRODUTOS;

SELECT * FROM BACKUP.BKP_PRODUTOS;