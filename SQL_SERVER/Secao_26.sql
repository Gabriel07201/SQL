USE EMPRESA
GO

/* CRIANDO UMA TABELA */

CREATE TABLE ALUNO(
	IDALUNO INT PRIMARY KEY IDENTITY,
	NOME VARCHAR(30) NOT NULL,
	SEXO CHAR(1) NOT NULL,
	NASCIMENTO DATE NOT NULL,
	EMAIL VARCHAR(30) UNIQUE
)
GO

/* CONSTRAINTS */

ALTER TABLE ALUNO
ADD CONSTRAINT CK_SEXO CHECK(SEXO IN('M','F'))
GO

/* 1 X 1 */

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY IDENTITY(100,10),
	BAIRRO VARCHAR(30),
	UF CHAR(2) NOT NULL
	CHECK (UF IN('RJ','SP','MG')),
	ID_ALUNO INT UNIQUE
)
GO

/* CRIANDO A FK */

ALTER TABLE ENDERECO ADD CONSTRAINT FK_ENDERECO_ALUNO
FOREIGN KEY(ID_ALUNO) REFERENCES ALUNO(IDALUNO)
GO


/* COMANDOS DE DESCRIÇÃO
SÃO PROCEDURES JÁ CRIADAS E ARMAZENADAS NO SISTEMA */

SP_COLUMNS ALUNO
GO

SP_HELP ALUNO
GO

/* INSERINDO DADOS */

INSERT INTO ALUNO VALUES('ANDRE','M','2018/12/09','ANDRE@GMAIL.COM')
INSERT INTO ALUNO VALUES('ANA','F','1978/08/09','ANA@GMAIL.COM')
INSERT INTO ALUNO VALUES('RUI','M','1982/12/09','RUI@GMAIL.COM')
INSERT INTO ALUNO VALUES('JOAO','M','1975/03/09','JOAO@GMAIL.COM')
GO

SELECT * FROM ALUNO
GO

/* ENDEREÇO */

SP_COLUMNS ENDERECO
GO

INSERT INTO ENDERECO VALUES('FLAMENGO','RJ',1)
INSERT INTO ENDERECO VALUES('MORUMBI','SP',2)
INSERT INTO ENDERECO VALUES('CENTRO','MG',3)
INSERT INTO ENDERECO VALUES('CENTRO','SP',4)
GO

/* CRIANDO TABELA TELEFONE 1xN */

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY IDENTITY,
	TIPO CHAR(3) NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_ALUNO INT,
	CHECK(TIPO IN('RES','COM','CEL'))
)
GO


INSERT INTO TELEFONE VALUES('CEL','54738',1)
INSERT INTO TELEFONE VALUES('RES','798564',1)
INSERT INTO TELEFONE VALUES('COM','3265',2)
INSERT INTO TELEFONE VALUES('CEL','0638547',2)
GO


/* PEGANDO DATA ATUAL */

SELECT GETDATE()
GO

/* CLAUSULA AMBÍGUA */

SELECT A.NOME, T.TIPO, T.NUMERO, E.BAIRRO, E.UF
FROM ALUNO A
LEFT JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = E.ID_ALUNO
GO

/* IFNULL */

SELECT A.NOME, 
		ISNULL(T.TIPO, 'SEM') AS "TIPO",		
		ISNULL(T.NUMERO,'NUMERO') AS "NUMERO", 
		E.BAIRRO, 
		E.UF
FROM ALUNO A
LEFT JOIN TELEFONE T
ON A.IDALUNO = T.ID_ALUNO
INNER JOIN ENDERECO E
ON A.IDALUNO = E.ID_ALUNO
GO


/* DATAS */

SELECT NOME, NASCIMENTO
FROM ALUNO
GO

/* DATEDIFF - CALCULA A DIFERENÇA ENTRE 2 DATAS */

SELECT NOME, GETDATE() FROM ALUNO
GO

SELECT NOME, DATEDIFF(DAY, NASCIMENTO, GETDATE()) AS "IDADE"
FROM ALUNO
GO

SELECT NOME, (DATEDIFF(DAY, NASCIMENTO, GETDATE())/365) AS "IDADE"
FROM ALUNO
GO

SELECT NOME, (DATEDIFF(MONTH, NASCIMENTO, GETDATE())/12) AS "IDADE"
FROM ALUNO
GO

SELECT NOME, DATEDIFF(YEAR, NASCIMENTO, GETDATE()) AS "IDADE"
FROM ALUNO
GO


/* DATENAME - TRAZ O NOME DA PARTE DA DATA EM QUESTÃO */

SELECT NOME, DATENAME(MONTH, NASCIMENTO) FROM ALUNO
GO

SELECT NOME, DATENAME(YEAR, NASCIMENTO) FROM ALUNO
GO

SELECT NOME, DATENAME(WEEKDAY, NASCIMENTO) FROM ALUNO
GO

SELECT NOME, DATENAME(DAY, NASCIMENTO) FROM ALUNO
GO

/* DATEPART - RETORNO É UM INTEIRO */

SELECT NOME, DATEPART(MONTH, NASCIMENTO), DATENAME(MONTH, NASCIMENTO) FROM ALUNO
GO

/* DATEADD - RETORNA UMA DATA SOMANDO OUTRA DATA */

SELECT DATEADD(DAY, 365, GETDATE())
GO


/* CONVERSÃO DE DADOS */

SELECT '1' + '1'
GO

SELECT CAST('1' AS INT) + CAST('1' AS INT)
GO

SELECT CAST(DAY(NASCIMENTO) AS VARCHAR(10)) + '/' + CAST(MONTH(NASCIMENTO) AS VARCHAR(10)) + '/' + CAST(YEAR(NASCIMENTO) AS VARCHAR(10)) AS "NASCIMENTO"
FROM ALUNO
GO

/* CHARINDEX - RETORNA UM INTEIRO DE UMA PROCURA
CONTAGEM DEFAULT = 1*/

SELECT NOME, CHARINDEX('A', NOME) AS "INDICE"
FROM ALUNO
GO

SELECT NOME, CHARINDEX('A', NOME, 2) AS "INDICE"
FROM ALUNO
GO


/* BULK INSERT - IMPORTAÇÃO DE ARQUIVOS */

CREATE TABLE LANCAMENTO_CONTABIL(
	CONTA INT,
	VALOR INT,
	DEB_CRED CHAR(1)
)
GO

BULK INSERT LANCAMENTO_CONTABIL
FROM 'C:\Users\Gabriel\Downloads\CONTAS.txt'
WITH
(
	FIRSTROW = 2,
	DATAFILETYPE = 'char',
	FIELDTERMINATOR = '\t',
	ROWTERMINATOR = '\n'
)

SELECT * FROM LANCAMENTO_CONTABIL
GO


/* DESAFIO DE SALDO
QUERY QUE TRAGA O NÚMERO DA CONTA 
SALDO - DEVEDOR OU CREDOR */


SELECT CONTA, SUM(VALOR * (CHARINDEX('C',DEB_CRED) * 2 - 1)) AS SALDO
FROM LANCAMENTO_CONTABIL
GROUP BY CONTA
GO